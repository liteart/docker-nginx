upstream intranet-cluster {
    ip_hash;
    server 192.168.33.10;
}


server {
  listen 80 default_server;
  server_name intranetlocal.bertschi.com;

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name  intranet.bertschi.domain;
  #root /usr/share/nginx/html
    ssl_certificate /etc/nginx/conf.d/intranet.crt;
    ssl_certificate_key /etc/nginx/conf.d/intranet.key;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    client_max_body_size 100M;
    fastcgi_read_timeout	3600;
    proxy_connect_timeout       3600;
    proxy_send_timeout          3600;
    proxy_read_timeout          3600;
    send_timeout                3600;


  location / {
          return 200 '<rules version="60"><emie></emie></rules>';
              add_header Content-Type application/xml;
      }


  #resolver 171.67.1.234 171.64.1.234 valid=300s;

    #FastCGI authorizer for Auth Request module
    location = /shibauthorizer {
        internal;
        include fastcgi_params;
    fastcgi_pass unix:/var/run/shibboleth/shibauthorizer.sock;
    }

    #FastCGI responder for SSO
    location /Shibboleth.sso {
        include fastcgi_params;
    fastcgi_pass unix:/var/run/shibboleth/shibresponder.sock;
    }


    #A secured location.  Here all incoming requests query the
    #FastCGI authorizer.  Watch out for performance issues and spoofing.
    location /secure {
        more_clear_input_headers 'Variable-*' 'Shib-*' 'Remote-User' 'REMOTE_USER' 'Auth-Type' 'AUTH_TYPE';

        #Add your attributes here. They get introduced as headers
        #by the FastCGI authorizer so we must prevent spoofing.
        more_clear_input_headers 'displayName' 'mail' 'persistent-id';
        auth_request /shibauthorizer;
        proxy_pass http://intranet-cluster;
    }


}
